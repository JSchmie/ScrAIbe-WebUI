# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker Image

on:
  pull_request_target:
      branches:
          - main
      types:
          - closed
  
  push:
      tags:
          - 'v*.*.*'
          
  workflow_dispatch:

jobs:
  Build-and-publish-to-Dockerhub:
    if: |
        (github.event_name == 'workflow_dispatch') ||
        (github.event_name == 'pull_request_target' &&
        github.event.pull_request.merged &&
        contains(github.event.pull_request.labels.*.name, 'docker')) ||
        (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
    name: Build and publish to Dockerhub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: my-docker-hub-namespace/my-docker-hub-repository

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      
      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: false
      
